from flask import Blueprint, request, jsonify
from flask_login import login_required, current_user
from .models import Hero
from .tools.decode import Decode
from . import db
import json
import os
from website.constants import LITURGIES



req = Blueprint("requests", __name__)


@req.route("/data-request", methods=['GET', 'POST'])
@login_required
def data_request():
    request_data = request.get_json()
    hero = Hero.query.filter_by(user_id=current_user.id, secure_name=request_data['name']).first()
    sorted_hero_stats = json.dumps(hero.stats, sort_keys=True)
  
    if not hero:
        return jsonify(None)
    
    return sorted_hero_stats



@req.route('/save-hero', methods=['POST'])
@login_required
def save_hero_from_request():
    request_data = request.get_json()
    # print(request_data)
    hero = Hero.query.filter_by(user_id=current_user.id, secure_name=request_data['name']).first()
    if hero:
        # print(json.dumps(hero.stats, sort_keys=True, indent=4))
        print("-"*50)
        print(f"before: {hero.stats['wealth']=}, {hero.stats['name']}, {request_data['name']}")
        for key, item in request_data.items():
            if key != 'name':
                hero.stats[key] = item
                print(f"{hero.stats[key]=}")

        hero = Hero.query.filter_by(user_id=current_user.id, secure_name=request_data['name']).first()
        print(f"right before commit: {hero.stats['wealth']=}")

        db.session.commit()
        hero = Hero.query.filter_by(user_id=current_user.id, secure_name=request_data['name']).first()
        print(f"after commit: {hero.stats['wealth']=}")

        return jsonify(error=0)
    
    return jsonify(error=-1)


@req.route('/delete-hero',methods=['POST'])
@login_required
def delete_hero():
    data = request.get_json()
    hero = Hero.query.filter_by(user_id=current_user.id, secure_name=data['name'])
    hero_path = hero.first().path
    
    if not hero_path:
        # no valid hero
        return jsonify(error=-1)

    if os.path.isfile(hero_path):
        os.remove(hero_path)

    hero.delete()
    db.session.commit()

    return jsonify(error=0)